1
00:00:00,000 --> 00:00:03,000
What are Inline Functions?

2
00:00:03,000 --> 00:00:04,316
在本视频中，

3
00:00:04,316 --> 00:00:09,801
我们将了解内联函数的含义以及如何在计算思维中应用。

4
00:00:09,801 --> 00:00:12,214
 内联函数是附加函数，

5
00:00:12,214 --> 00:00:15,505
可以输入到 Main 函数中，

6
00:00:15,505 --> 00:00:18,358
以计算或转换代码行中的值。

7
00:00:18,358 --> 00:00:22,965
 您经常使用的一些常见内联函数是内联列表，

8
00:00:22,965 --> 00:00:23,623
常量，

9
00:00:23,623 --> 00:00:24,940
随机和转换。

10
00:00:24,940 --> 00:00:24,940


11
00:00:24,940 --> 00:00:27,940
Inline - List

12
00:00:27,940 --> 00:00:30,707
长度列表返回列表中的项目数，

13
00:00:30,707 --> 00:00:32,486
也称为列表的长度。

14
00:00:32,486 --> 00:00:33,475
 可以说，

15
00:00:33,475 --> 00:00:37,230
列表一代表从 0 到 3 的整数列表。

16
00:00:37,230 --> 00:00:40,393
 列表一的长度等于列表一的长度。

17
00:00:40,393 --> 00:00:41,975
 当打印变量 “

18
00:00:41,975 --> 00:00:43,754
列表 1 的长度”

19
00:00:43,754 --> 00:00:44,347
 时，

20
00:00:44,347 --> 00:00:46,719
值 4 将被打印为输出。

21
00:00:46,719 --> 00:00:49,882
 这是因为列表中有 4 个项目。

22
00:00:49,882 --> 00:00:50,673
 因此，

23
00:00:50,673 --> 00:00:52,650
列表一的长度是 4。

24
00:00:52,650 --> 00:00:52,650


25
00:00:52,650 --> 00:00:57,302
范围开始结束生成一个从开始到结束的整数列表减去一个列表，

26
00:00:57,302 --> 00:00:58,797
给定结束等于 n.

27
00:00:58,797 --> 00:00:59,794
 以下示例，

28
00:00:59,794 --> 00:01:03,616
列表二等于范围零 5 将生成一个包含从零到 <

29
00:01:03,616 --> 00:01:05,277
sub alias=

30
00:01:05,277 --> 00:01:05,443
"

31
00:01:05,443 --> 00:01:05,610
"

32
00:01:05,610 --> 00:01:05,776
>

33
00:01:05,776 --> 00:01:06,108
4<

34
00:01:06,108 --> 00:01:06,274
/

35
00:01:06,274 --> 00:01:06,939
sub>

36
00:01:06,939 --> 00:01:07,770
的值的列表

37
00:01:07,770 --> 00:01:14,107
范围开始结束步骤生成一个从开始到结束的整数列表减去一个列表，

38
00:01:14,107 --> 00:01:16,008
如果结束等于 n，

39
00:01:16,008 --> 00:01:18,121
具有指定的步长大小。

40
00:01:18,121 --> 00:01:19,811
 在此示例之后，

41
00:01:19,811 --> 00:01:21,923
列表三等于范围零五，

42
00:01:21,923 --> 00:01:24,247
将生成一个包含值 0、

43
00:01:24,247 --> 00:01:26,360
2 和 4 的列表。

44
00:01:26,360 --> 00:01:26,360


45
00:01:26,360 --> 00:01:28,333
如果指定的变量是列表，

46
00:01:28,333 --> 00:01:31,203
则是 List 返回 True，

47
00:01:31,203 --> 00:01:32,100
如果不是，

48
00:01:32,100 --> 00:01:33,895
则返回 false。

49
00:01:33,895 --> 00:01:34,612
 例如，

50
00:01:34,612 --> 00:01:36,406
列表四是一个空列表。

51
00:01:36,406 --> 00:01:37,124
 因此，

52
00:01:37,124 --> 00:01:38,021
当打印 “

53
00:01:38,021 --> 00:01:38,738
是列表”

54
00:01:38,738 --> 00:01:39,635
 4 时，

55
00:01:39,635 --> 00:01:41,430
输出将为 True。

56
00:01:41,430 --> 00:01:41,430


57
00:01:41,430 --> 00:01:44,430
Inline - Constants

58
00:01:44,430 --> 00:01:45,802
也有内联常量。

59
00:01:45,802 --> 00:01:48,938
 一个例子是 PiepiX Y，

60
00:01:48,938 --> 00:01:53,250
它在 X Y 轴上对齐的原点定义了一个平面。

61
00:01:53,250 --> 00:01:53,250


62
00:01:53,250 --> 00:01:55,546
另一个例子是 X Y，

63
00:01:55,546 --> 00:01:59,930
它在 X Y 轴对齐的原点处定义一个平面。

64
00:01:59,930 --> 00:01:59,930


65
00:01:59,930 --> 00:02:02,930
Inline - Random

66
00:02:02,930 --> 00:02:05,350
内联可用于生成随机数。

67
00:02:05,350 --> 00:02:09,530
 随机最小值将返回特定范围内的随机数。

68
00:02:09,530 --> 00:02:10,410
 例如，

69
00:02:10,410 --> 00:02:13,490
如果我的数字等于随机零 2，

70
00:02:13,490 --> 00:02:19,210
那么计算机将生成一个介于 0 和 2 之间的随机数，

71
00:02:19,210 --> 00:02:20,750
包括最小数字，

72
00:02:20,750 --> 00:02:22,730
但不包括最大数字。

73
00:02:22,730 --> 00:02:25,150
 这些数字也包括小数。

74
00:02:25,150 --> 00:02:25,150


75
00:02:25,150 --> 00:02:29,656
随机整数最小值将返回特定范围内的随机整数。

76
00:02:29,656 --> 00:02:30,514
 例如，

77
00:02:30,514 --> 00:02:33,947
如果我的数字等于随机整数零 2，

78
00:02:33,947 --> 00:02:39,741
那么计算机将生成一个介于 0 和 2 之间的随机整数，

79
00:02:39,741 --> 00:02:41,243
包括最小数字，

80
00:02:41,243 --> 00:02:43,174
但不包括最大数字。

81
00:02:43,174 --> 00:02:44,032
 因此，

82
00:02:44,032 --> 00:02:48,110
每次执行代码时都会生成值 0 或 1。

83
00:02:48,110 --> 00:02:48,110


84
00:02:48,110 --> 00:02:54,062
随机最小最大 Seed 将在特定范围内返回一个随机数，

85
00:02:54,062 --> 00:02:58,030
但在每次执行代码时返回相同的随机数。

86
00:02:58,030 --> 00:02:58,030


87
00:02:58,030 --> 00:03:01,030
Inline - Conversion

88
00:03:01,030 --> 00:03:03,488
内联也可用于转换值。

89
00:03:03,488 --> 00:03:07,421
 这是因为某些函数只接受弧度值，

90
00:03:07,421 --> 00:03:09,880
但使用单位度更直观。

91
00:03:09,880 --> 00:03:09,880


92
00:03:09,880 --> 00:03:12,725
这总结了内联函数的视频。

93
00:03:12,725 --> 00:03:17,230
 接下来是您的修订版本的一些练习问题。

94
00:03:17,230 --> 00:03:18,890
 下次会议再见

95
00:03:18,890 --> 00:03:21,890
The End

